datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  carts     Cart[]
  Auth      Auth[]
  Order     Order[]
}

model Auth {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  token     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id           String         @id @default(uuid())
  name         String
  description  String
  price        Float
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  carts        Cart[]
  ItemInCart   ItemInCart[]
  ItemInOrder  ItemInOrder[]
  Category     Category?      @relation(fields: [categoryId], references: [id])
  categoryId   String?
  ProductImage ProductImage[]
}

model Cart {
  id        String       @id @default(uuid())
  userId    String
  user      User         @relation(fields: [userId], references: [id])
  items     ItemInCart[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  Product   Product?     @relation(fields: [productId], references: [id])
  productId String?
}

model ItemInCart {
  id        String   @id @default(uuid())
  cartId    String
  cart      Cart     @relation(fields: [cartId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id        String        @id @default(uuid())
  userId    String
  user      User          @relation(fields: [userId], references: [id])
  items     ItemInOrder[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model ItemInOrder {
  id        String   @id @default(uuid())
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        String    @id @default(uuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]
}

model ProductImage {
  id        String   @id @default(uuid())
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Admin {
  id        String      @id @default(uuid())
  email     String      @unique
  password  String
  name      String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  AdminAuth AdminAuth[]
}

model AdminAuth {
  id        String   @id @default(uuid())
  adminId   String
  admin     Admin    @relation(fields: [adminId], references: [id])
  token     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
